@using Microsoft.AspNetCore.Identity
@using Schedulist.DAL.Models

@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    var user = await UserManager.FindByNameAsync(User?.Identity?.Name?? "");
}

<ul class="nav nav-pills flex-column mt-4">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @user?.Name @user?.Surname </a>
    </li>
    <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
            <button id="logout" type="submit" class="nav-link btn btn-link text-dark border-0">Logout</button>
        </form>
    </li>
}
else
    {
        <button type="button" class="btn btn-secondary btn-x1" style="width: 50px; height: 50px; border-radius: 50%; background-color: white;" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            <i class="bi bi-person" style="color: gray;"></i>
        </button>
 <div class="dropdown-menu">
        <li class="nav-item" style="text-align: left;">
            <a class="nav-link text-black" id="register" asp-area="Identity" asp-page="/Account/Register" style="font-family: 'Dubai', sans-serif;">Register</a>
        </li>
        <li class="nav-item" style="text-align: left;">
            <a class="nav-link text-black" id="login" asp-area="Identity" asp-page="/Account/Login" style="font-family: 'Dubai', sans-serif;">Login</a>
        </li>
        </div>
        }
</ul>
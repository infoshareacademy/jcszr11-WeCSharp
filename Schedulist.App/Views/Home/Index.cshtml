@model CalendarParams
@{
    ViewData["Title"] = "Calendar";
    // TODO: gdzie mam umieścić logikę? 
    //      zakładam że w viewsach ma być jej jak najmniej więc chciałbym:
    //          stworzyć model calendar
    //          przekazywać viewsowi dane do wyrysowania go za pomocą controlera
    // TODO: jak automatycznie odświeżyć stronę/fragment po zmianie danych?
    //      np po zmianie miesiąca 
    // TODO: jak najlepiej generować views na podstawie podanej daty
    //      np po kliknięciu w kafelek z daną datą
}

<style>
    .monthName{
        min-width: 490px;
        font-size:calc(30px + 3.5vw);
        justify-content: center;
    }
    .calendarHeader {
        background-color: rgb(245, 245, 245);
        border-top: 1px solid lightgrey;
        border-bottom: 1px solid lightgrey;
        border-right: 1px solid lightgrey;
        min-width: 70px;
        font-size:calc(12px + 0.7vw);
    }
    .calendarBlock {
        background-color: rgb(235, 235, 235);
        border-bottom: 1px solid lightgrey;
        border-right: 1px solid lightgrey;
        min-width: 70px;
        min-height: 70px;
        color:grey;
        text-decoration: none;
        padding: 0;
    }
    .today {
        border: 1px solid red;
        z-index: 1;
        color:red;
    }
    .thisMonth {
        background-color: rgb(245, 245, 245);
        color: black;
    }
</style>

<div class="text-center" style="height: calc(100vh - 140px);">
    <div class="container-fluid d-flex h-100 flex-column">
            <div class="row flex-nowrap monthName">
                <div class="col">
                    <button type="button" class="btn btn-primary"><</button>
                </div>
                @Model.FirstDayOfTheMonth.ToString("MMMM")
                <div class="col">
                    @* <a asp-controller="Home" asp-action="Index" asp-route-id="@Model.CurrentDate"><button type="button" class="btn btn-primary">></button></a> *@
                    <a data-path = "@Url.Action("NextMonth", "Home", new {id = 1})">
                        <button type="button" class="btn btn-primary">></button>
                    </a>
                    <form asp-action="NextMonth" method="post">
                        <button type="submit" class="btn btn-primary">X</button>
                    </form>
                </div>
            </div>
        <div class="row flex-nowrap" style="border-left: 1px solid lightgrey;">
            @for (int i = 0; i < 7; i++)
            {
                DateTime drawDate = @Model.StartDate.AddDays(i);
                <div class="col calendarHeader">@drawDate.DayOfWeek</div>
            }
        </div>
        <div class="row flex-nowrap flex-grow-1" style="border-left: 1px solid lightgrey;">
            @for (int i = 0; i < @Model.DaysToDraw; i++)
            {
                DateTime drawDate = @Model.StartDate.AddDays(i);
                if (i % 7 == 0 && i > 0)
                {
                    @:</div><div class="row flex-nowrap flex-grow-1" style="border-left: 1px solid lightgrey;">
                }
                if (drawDate.Month == @Model.CurrentDate.Month)
                {
                    if (drawDate.Day == @Model.CurrentDate.Day)
                    {
                        <a class="col calendarBlock thisMonth today" asp-area="" asp-controller="Home" asp-action="Privacy">@drawDate.Day</a>
                        
                    }
                    else
                    {
                        <a class="col calendarBlock thisMonth" asp-area="" asp-controller="Home" asp-action="Privacy">@drawDate.Day</a>
                    }
                }
                else
                {
                    <a class="col calendarBlock" asp-area="" asp-controller="Home" asp-action="Privacy">@drawDate.Day</a>
                }
            }
        </div>
    </div>
</div>

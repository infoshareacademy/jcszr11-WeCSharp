@using Schedulist.App.ViewModels
@using Schedulist.DAL.Models
@model DayViewModel

@{
    ViewData["Title"] = "Day";
}

<script>
    function openCalendarSidebar(element) {
        closeCalendarSidebars()
        var sidebarId = element.getAttribute('data-sidebar-id');
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.display = "block";
    }

    function closeCalendarSidebars() {
    @foreach (CalendarEvent calendarEvent in @Model.CalendarEvents)
    {
        string sidebarId = $"calendarEvent{calendarEvent.Id}";
        @:closeCalendarSidebar('@sidebarId');
    }
                }

    function closeCalendarSidebar(sidebarId) {
        var sidebarElement = document.getElementById(sidebarId);
        sidebarElement.style.display = "none";
    }

    var calendarEventDeletedMessage = localStorage.getItem('calendarEventDeletedMessage');

    if (calendarEventDeletedMessage) {
        toastr.success(calendarEventDeletedMessage);
        localStorage.removeItem('calendarEventDeletedMessage');
    }

    var calendarEventDeletedMessage = localStorage.getItem('calendarEventDeletedMessage');

    if (calendarEventDeletedMessage) {
        toastr.success(calendarEventDeletedMessage);
        localStorage.removeItem('calendarEventDeletedMessage');
    }
</script>

<div style="position: sticky; top: 0; z-index: 2;">
    <div class="row flex-nowrap month-name-container">
        <div class="button-field">
            <button type="button" class="btn btn-light" onclick="location.href='@Url.Action("Day", "Calendar", new {@date = Model.Date.AddDays(-1), @userToEdit = Model.User})'"><</button>
        </div>
        <div class="button-field">
            <button type="button" class="btn btn-light" onclick="location.href='@Url.Action("Day", "Calendar", new {@date = Model.Date.AddDays(1), @userToEdit = Model.User})'">></button>
        </div>
        <div class="month-name">
            @Model.Date.ToString("dd MMMM yyyy")
        </div>
        <div class="calendar-dropdown">
            <div class="dropdown">
                <button class="btn btn-primary dropdown-toggle month-view-dropdown" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Day
                </button>
                <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                    <a class="dropdown-item" onclick="location.href='@Url.Action("Week", "Calendar", new {@date = DateTime.Now, @userToEdit = Model.User.Id})'">Week</a>
                    <a class="dropdown-item" onclick="location.href='@Url.Action("ChangeUser", "Calendar", new {@date = DateTime.Now, @userToEdit = Model.User.Id})'">Month</a>
                </div>
            </div>
        </div>
        <div class="event-dropdown">
            <input type="hidden" name="chosenDate" value="@Model.Date.ToString(" yyyy-MM-dd")" />
            <button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Calendar")'">
                Add new event
            </button>
        </div>
        <div class="month-user-name">
            @Model.User.Name @Model.User.Surname - @Model.WorkMode
        </div>
    </div>
    <div class="row day-calendar-row">
        <div class="col-1 day-calendar-row-hour calendar-header" style="width: 135px;">Hour</div>
        <div class="col-11 calendar-header" style="width: calc(100% - 135px);"></div>
    </div>
</div>

<div class="calendar-hour-container">
    @for (int i = 0; i < 24; i++)
    {
        <div class="row day-calendar-row">
            @if (i < 12)
            {
                if (i == 0)
                {
                    <div class="col-1 day-calendar-row-hour">12 AM</div>
                }
                else
                {
                    <div class="col-1 day-calendar-row-hour">@i AM</div>
                }
            }
            else
            {
                if (i == 12)
                {
                    <div class="col-1 day-calendar-row-hour">12 AM</div>
                }
                else
                {
                    <div class="col-1 day-calendar-row-hour">@i PM</div>
                }
            }
            <div class="col-11"></div>
        </div>
    }
</div>

<div class="calendar-calendar-event-container">
    <div class="day-calendar-event-container">
        @if (@Model.CalendarEvents.Count > 0)
        {
            foreach (CalendarEvent calendarEvent in @Model.CalendarEvents)
            {
                if (calendarEvent.UserId == @Model.User.Id && calendarEvent.CalendarEventDate == @Model.Date)
                {
                    string top = $"{calendarEvent.CalendarEventStartTime.Hour * 60 + calendarEvent.CalendarEventStartTime.Minute}px";
                    var duration = calendarEvent.CalendarEventEndTime - calendarEvent.CalendarEventStartTime;
                    string height = $"{duration.Hours * 60 + duration.Minutes}px";
                    string sidebarId = $"calendarEvent{calendarEvent.Id}";
                    <div class="day-calendar-event" style="top: @top; height: @height;" data-sidebar-id="@sidebarId" onclick="openCalendarSidebar(this)">
                        @calendarEvent.CalendarEventName
                    </div>

                }
            }
        }
    </div>
</div>

@foreach (CalendarEvent calendarEvent in @Model.CalendarEvents)
{
    string sidebarId = $"calendarEvent{calendarEvent.Id}";
    <div id="@sidebarId" class="calendar-sidebar-container">
        <div class="calendar-sidebar">
            <button onclick="closeCalendarSidebars()" class="sidebar-close-button">x</button>
            @calendarEvent.CalendarEventStartTime - @calendarEvent.CalendarEventEndTime<br>
            @calendarEvent.CalendarEventName<br>
            @calendarEvent.CalendarEventDescription<br>
            <div style="margin-top: 15px">
                <button class="btn btn-primary" onclick="location.href='@Url.Action("Edit", "CalendarEvent", new { id = calendarEvent.Id })'">
                    Edit
                </button>
                <button type="button" class="btn btn-danger" onclick="DeleteCalendarEvent('@Url.Action("Delete", "CalendarEvent")?id=@calendarEvent.Id','@calendarEvent.CalendarEventName','@calendarEvent.CalendarEventDescription',
                        '@calendarEvent.CalendarEventDate','@calendarEvent.CalendarEventStartTime','@calendarEvent.CalendarEventEndTime','@calendarEvent.UserId')">
                    Delete
                </button>
            </div>
        </div>
    </div>
}

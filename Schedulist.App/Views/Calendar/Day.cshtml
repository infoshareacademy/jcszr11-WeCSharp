@using Schedulist.App.ViewModels
@using Schedulist.DAL.Models
@model DayViewModel

@{
    ViewData["Title"] = "Day";
}
<div class="row flex-nowrap month-name-container">
    <div class="button-field">
        <button type="button" class="btn btn-light" onclick="location.href='@Url.Action("Day", "Calendar", new {@date = Model.Date.AddDays(-1), @userToEdit = Model.User})'"><</button>
    </div>
    <div class="button-field">
        <button type="button" class="btn btn-light" onclick="location.href='@Url.Action("Day", "Calendar", new {@date = Model.Date.AddDays(1), @userToEdit = Model.User})'">></button>
    </div>
    <div class="month-name">
        @Model.Date.ToString("dd MMMM yyyy")
    </div>
    <div class="calendar-dropdown">
        <div class="dropdown">
            <button class="btn btn-primary dropdown-toggle month-view-dropdown" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Day
            </button>
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" onclick="location.href='@Url.Action("Week", "Calendar", new {@date = DateTime.Now, @userToEdit = Model.User})'">Week</a>
                <a class="dropdown-item" onclick="location.href='@Url.Action("Index", "Calendar", new {@date = DateTime.Now, @userToEdit = Model.User})'">Month</a>
            </div>
        </div>
    </div>
    <div class="month-user-name">
        @Model.User.Name @Model.User.Surname - @Model.WorkMode
    </div>
</div>

<div>
    <div class="row day-calendar-row">
        <div class="col-1 day-calendar-row-hour calendar-header">Hour</div>
        <div class="col-11 calendar-header"></div>
    </div>
    @for (int i = 0; i < 24; i++)
    {
        <div class="row day-calendar-row">
            @if (i < 12)
            {
                if (i == 0)
                {
                    <div class="col-1 day-calendar-row-hour">12 AM</div>
                }
                else
                {
                    <div class="col-1 day-calendar-row-hour">@i AM</div>
                }
            }
            else
            {
                if (i == 12)
                {
                    <div class="col-1 day-calendar-row-hour">12 AM</div>
                }
                else
                {
                    <div class="col-1 day-calendar-row-hour">@i PM</div>
                }
            }
            <div class="col-11"></div>
        </div>
    }
</div>

@if (@Model.CalendarEvents.Count > 0)
{
    <div style="display: flex;">
        <div class="row flex-nowrap row-margin">
            <div class="col-3 row-title row-text text-center standard-border">
                @Html.DisplayNameFor(model => model.CalendarEvents.FirstOrDefault().CalendarEventName)
            </div>
            <div class="col  row-title row-text text-center standard-border">
                @Html.DisplayNameFor(model => model.CalendarEvents.FirstOrDefault().CalendarEventDescription)
            </div>
            <div class="col-1  row-title row-text text-center standard-border">
                @Html.DisplayNameFor(model => model.CalendarEvents.FirstOrDefault().CalendarEventStartTime)
            </div>
            <div class="col-1  row-title row-text text-center standard-border">
                @Html.DisplayNameFor(model => model.CalendarEvents.FirstOrDefault().CalendarEventEndTime)
            </div>
            <div class="btn-edit-delete"></div>
        </div>
    </div>
    @foreach (CalendarEvent calendarEvent in @Model.CalendarEvents)
    {
        if (calendarEvent.UserId == @Model.User.Id && calendarEvent.CalendarEventDate == @Model.Date)
        {
            <div style="display: flex;">
                <div class="row flex-nowrap row-margin">
                    <div class="col-3 row-text text-center standard-border">
                        @Html.DisplayFor(modelItem => calendarEvent.CalendarEventName)
                    </div>
                    <div class="col row-text text-center standard-border">
                        @Html.DisplayFor(modelItem => calendarEvent.CalendarEventDescription)
                    </div>
                    <div class="col-1 row-text text-center standard-border">
                        @Html.DisplayFor(modelItem => calendarEvent.CalendarEventStartTime)
                    </div>
                    <div class="col-1 row-text text-center standard-border">
                        @Html.DisplayFor(modelItem => calendarEvent.CalendarEventEndTime)
                    </div>
@*                     <button class="btn btn-primary btn-edit-delete" onclick="location.href='@Url.Action("Edit", "CalendarEvent")/@calendarEvent.CalendarEventId'">
                        e
                    </button> *@
                    <button class="btn btn-primary btn-edit-delete" onclick="DeleteCalendarEvent('@Url.Action("Delete", "CalendarEvent")?id=@calendarEvent.Id','@calendarEvent.CalendarEventName','@calendarEvent.CalendarEventDescription',
                    '@calendarEvent.CalendarEventDate','@calendarEvent.CalendarEventStartTime','@calendarEvent.CalendarEventEndTime','@calendarEvent.UserId')">
                        Delete
                    </button>
                </div>
            </div>
        }
    }
}
else
{
    <div class="no-events text-center">
        No events for that day
    </div>
}
@if (Model.WorkMode == "Holiday leave" || Model.WorkMode == "Sick leave")
{
    <div class="no-events text-center">
        You cannot create new Calendar event if Work mode equals "Holiday leave" or "Sick leave"!
    </div>
}
else
{
    <div class="add-event text-center">
        <input type="hidden" name="chosenDate" value="@Model.Date.ToString(" yyyy-MM-dd")" />
        <button class="btn btn-primary" onclick="location.href='@Url.Action("Create", "Calendar")'">
            Add new event
        </button>
    </div>
}


<script>
    var calendarEventDeletedMessage = localStorage.getItem('calendarEventDeletedMessage');

    if (calendarEventDeletedMessage) {
        toastr.success(calendarEventDeletedMessage);
        localStorage.removeItem('calendarEventDeletedMessage');
    }
</script>

@using Schedulist.DAL.Models
@using Schedulist.App.Controllers
@model IEnumerable<Statistics>


@{
    ViewData["Title"] = "Statistics";
    }
  <!DOCTYPE html>
<html>
<head>
    <title>Statistics</title>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
        }

        .container {
            text-align: center;
        }
    </style>
</head>
<body>
    <div class="container" style="margin-top: 50px;">
        <style>
            .chart-container {
                display: flex;
                flex-wrap: wrap;
                width: 100%;
                justify-content: center; 
            }

            .chart-wrapper {
                width: calc(50% - 10px);
                margin-right: 20px;
                margin-bottom: 20px;
            }

                .chart-wrapper:last-child {
                    margin-right: 0;
                }

            canvas {
                width: 100%;
                height: auto;
            }

            .tile {
                font-family: Dubai;
                font-weight: bold;
                color: #fff;
                padding: 7px 30px;
                border-radius: 5px;
                transition: 661ms;
                display: flex;
                align-items: center;
                cursor: pointer;
                text-align: center;
                background-color: #1870d5;
                border: none; 
                width: fit-content; 
                text-align: center;
            }

                .tile:hover {
                    padding: 7px 30px;
                    background-color: #fff; 
                    color: #1870d5; 
                }
        </style>

        <h1>Statistics</h1>

        <div class="chart-container" style="margin-top: 50px;">
            <div class="chart-wrapper">
                <canvas id="myChart" width="150" height="100"></canvas>
            </div>
            <div class="chart-wrapper">
                <canvas id="myChart2" width="150" height="100"></canvas>
            </div>
        </div>
        <div class="chart-container">
            <div class="chart-wrapper">
                <canvas id="myChart3" width="150" height="100"></canvas>
            </div>
            <div class="chart-wrapper">
                <canvas id="myChart4" width="150" height="100"></canvas>
            </div>
        </div>

        

        @section Scripts {
            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
            <script>
                var ctx = document.getElementById('myChart').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Labels)),
                        datasets: [{
                            label: 'Number of work modes per user - current month',
                            data: @Html.Raw(Json.Serialize(ViewBag.Data)),
                            backgroundColor: 'rgba(152 251 152)',
                            borderColor: 'rgba(	144 238 144)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

                var ctx2 = document.getElementById('myChart2').getContext('2d');
                var myChart2 = new Chart(ctx2, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Labels2)),
                        datasets: [{
                            label: 'Home office by Date - current month',
                            data: @Html.Raw(Json.Serialize(ViewBag.Data2)),
                            backgroundColor: 'rgba(	135 206 235)',
                            borderColor: 'rgba(	135 206 235)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

                var ctx3 = document.getElementById('myChart3').getContext('2d');
                var myChart3 = new Chart(ctx3, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Labels3)),
                        datasets: [{
                            label: 'Sick leave by Date - current month',
                            data: @Html.Raw(Json.Serialize(ViewBag.Data3)),
                            backgroundColor: 'rgba(255 228 181)',
                            borderColor: 'rgba(255 228 181)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });

                var ctx4 = document.getElementById('myChart4').getContext('2d');
                var myChart4 = new Chart(ctx4, {
                    type: 'bar',
                    data: {
                        labels: @Html.Raw(Json.Serialize(ViewBag.Labels4)),
                        datasets: [{
                            label: 'Holiday by Date - current month',
                            data: @Html.Raw(Json.Serialize(ViewBag.Data4)),
                            backgroundColor: 'rgba(205 92 92)',
                            borderColor: 'rgba(205 92 92)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true
                                }
                            }]
                        }
                    }
                });
            </script>
        }

    </body>
    </html>
